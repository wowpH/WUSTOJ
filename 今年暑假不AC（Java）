import java.util.Scanner;

public class Main {

	Scanner sc;
	int n, i;
	// 存储节目开始时间和结束时间
	short[][] time;
	// 最终可以看的节目数量
	int number;

	public Main() {
		sc = new Scanner(System.in);

		// 输入节目数量
		n = sc.nextInt();
		// 数量为小于1就退出
		while (n > 0) {
			// 输入时间
			input();
			// 排序
			sort();
			// 统计可以看的节目数量
			number = statistics();
			System.out.println(number);
			// 输入节目数量
			n = sc.nextInt();
		}
		sc.close();
	}

	/**
	 * 输入节目的开始时间和结束时间
	 */
	private void input() {
		time = new short[n][2];
		for (i = 0; i < n; i++) {
			// 输入开始时间
			time[i][0] = sc.nextShort();
			// 输入结束时间
			time[i][1] = sc.nextShort();
		}
	}

	/**
	 * 节目排序。规则如下：
	 * 1、结束时间早的放在前面
	 * 2、结束时间相同，则开始时间早的放在前面 
	 * 算法：选择排序
	 */
	private void sort() {
		int j, min;
		for (i = 0; i < n; i++) {
			min = i;
			for (j = i; j < n; j++) {
				if (time[min][1] > time[j][1]) {
					min = j;
				} else if (time[min][1] == time[j][1]) {
					if (time[min][0] > time[j][0]) {
						min = j;
					}
				}
			}
			// 第i个就是最小的，不用交换
			if (min != i) {
				swap(min, i);
			}
		}
	}

	/**
	 * 交换节目位置，即交换时间
	 * 
	 * @param a 需要交换的第一组数据的下标
	 * @param b 需要交换的第二组数据的下标
	 */
	private void swap(int a, int b) {
		short temp;
		temp = time[a][0];
		time[a][0] = time[b][0];
		time[b][0] = temp;
		temp = time[a][1];
		time[a][1] = time[b][1];
		time[b][1] = temp;
	}

	/**
	 * 当前节目的开始时间大于等于上一个观看的节目
	 * number加一，并将previous更新为i
	 * @return 返回统计的可以看的节目数量
	 */
	private int statistics() {
		int number = 1;
		// 上一个观看的节目下标
		int previous = 0;
		for (i = 1; i < n; i++) {
			if (time[i][0] >= time[previous][1]) {
				number = number + 1;
				previous = i;
			}
		}
		return number;
	}

	public static void main(String[] args) {
		new Main();
	}
	
}
